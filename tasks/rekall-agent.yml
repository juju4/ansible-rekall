---

- block:
    - name: install rekall-agent systemd configuration
      ansible.builtin.template:
        src: "systemd-rekall-agent.service.j2"
        dest: "/lib/systemd/system/rekall-agent.service"
        mode: '0644'
        backup: yes
      register: systemdconf
      failed_when: false
    - block:
        - import_tasks: immutable.yml
          vars:
            target_dir: /lib/systemd/system
            state: pre
        - name: install rekall-agent systemd configuration
          ansible.builtin.template:
            src: "systemd-rekall-agent.service.j2"
            dest: "/lib/systemd/system/rekall-agent.service"
            mode: '0644'
            backup: yes
        - import_tasks: immutable.yml
          vars:
            target_dir: /lib/systemd/system
            state: post
      when: systemdconf is failed
    - name: enable and start rekall-agent systemd service
      ansible.builtin.service:
        name: rekall-agent
        enabled: yes
        state: 'started'
      failed_when: false
      when: rekall_with_agent_service_enabled|bool
    - name: disable and stop rekall-agent systemd service
      ansible.builtin.service:
        name: rekall-agent
        enabled: no
        state: 'stopped'
      failed_when: false
      when: not rekall_with_agent_service_enabled|bool
  when: ansible_service_mgr == 'systemd'

- block:
    - name: Retrieve rekall client configuration file to orchestrator
      ansible.builtin.fetch: src="{{ item }}" dest=tmp/ mode=0400
      with_items:
        - "{{ rekallagent_roothttp }}/client.config.yaml"
      delegate_to: "{{ rekallagent_servername }}"
    - name: ensure rekallagent etc dir exists
      ansible.builtin.file: "dest={{ rekallagent_etc }} state=directory mode=0755"
    - name: set up rekallagent config on client
      ansible.builtin.copy: src="tmp/{{ item }}" dest="{{ rekallagent_etc }}" mode=0600
      with_items:
        - "client.config.yaml"
      notify:
        - rekallagent restart
  when: rekallagent_servername != 'localhost'
